declare enum VALUE_RANGES {
    NEGATIVE = 0,
    NON_NEGATIVE = 1,
    POSITIVE = 2,
    NON_POSITIVE = 3
}
declare enum VALUE_TYPES {
    INT = 0,
    FLOAT = 1
}
declare const VALIDATIONS: {
    NonPositiveInt: {
        range: VALUE_RANGES;
        type: VALUE_TYPES;
    };
    PositiveInt: {
        range: VALUE_RANGES;
        type: VALUE_TYPES;
    };
    NonNegativeInt: {
        range: VALUE_RANGES;
        type: VALUE_TYPES;
    };
    NegativeInt: {
        range: VALUE_RANGES;
        type: VALUE_TYPES;
    };
    NonPositiveFloat: {
        range: VALUE_RANGES;
        type: VALUE_TYPES;
    };
    PositiveFloat: {
        range: VALUE_RANGES;
        type: VALUE_TYPES;
    };
    NonNegativeFloat: {
        range: VALUE_RANGES;
        type: VALUE_TYPES;
    };
    NegativeFloat: {
        range: VALUE_RANGES;
        type: VALUE_TYPES;
    };
};
declare function processValue(value: any, validation: {
    range: VALUE_RANGES;
    type: VALUE_TYPES;
}): number;
export { processValue, VALIDATIONS };
